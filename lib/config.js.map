{"version":3,"sources":["../src/config.js"],"names":["require","fs","path","nodeopen","execFun","ip","config","fileName","resolve","content","serverPort","Math","random","jserverPort","staticHost","etc","site","writeFile","err","console","dir","log","green","underline","module","exports"],"mappings":"AAAA;;AAEA;;;;;;;;;;;AAKAA,QAAQ,QAAR;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,WAAWH,QAAQ,UAAR,CAAjB;AACA,MAAMI,UAAUJ,QAAQ,WAAR,CAAhB;AACA,MAAMK,KAAKL,QAAQ,SAAR,GAAX;;AAEA;AACA,MAAMM,SAAS,MAAM;AACpB,KAAIC,WAAWL,KAAKM,OAAL,CAAa,+BAAb,CAAf;AACA,KAAIC,UAAUT,QAAQO,QAAR,CAAd;AACA,KAAIG,aAAaC,KAAKC,MAAL,KAAgB,IAAhB,GAAuB,IAAI,IAA5C;AACA,KAAIC,cAAcH,aAAa,CAA/B;AACA,KAAII,aAAc,UAAST,EAAG,IAAGQ,WAAY,EAA7C;AACAJ,SAAQM,GAAR,CAAYL,UAAZ,GAAyBA,UAAzB;AACAD,SAAQM,GAAR,CAAYF,WAAZ,GAA0BA,WAA1B;AACAJ,SAAQO,IAAR,CAAaF,UAAb,GAA0BA,UAA1B;;AAEA;AACAb,IAAGgB,SAAH,CAAaV,QAAb,EAAuB,yBAAeE,OAAf,EAAwB,IAAxB,EAA8B,IAA9B,CAAvB,EAA4D,OAA5D,EAAsES,GAAD,IAAS;AAC7E;AACA,MAAIA,GAAJ,EAAS;AACRC,WAAQC,GAAR,CAAYF,GAAZ;AACA;AACD;AACAd,UAAQ,CAAC,aAAD,EAAgB,eAAhB,CAAR,EAA0C,iBAA1C,EAA6D,MAAM;AAClE;AACAe,WAAQE,GAAR,CAAa,sBAAb,EAAqC,aAAYX,UAAW,EAAxB,CAA0BY,KAA1B,CAAgCC,SAApE,EAAgF,IAAhF,EACE,GAAElB,EAAG,IAAGK,UAAW,EAApB,CAAsBY,KAAtB,CAA4BC,SAD7B,EACyC,iCADzC;AAEApB,YAAU,UAASE,EAAG,IAAGK,UAAW,EAApC,EAAuC,MAAM;AAC5CS,YAAQE,GAAR,CAAa,qBAAb;AACA,IAFD;AAGA;AACA,GARD;AASA,EAfD;AAgBA,CA3BD;;AA6BAG,OAAOC,OAAP,GAAiBnB,MAAjB","file":"config.js","sourcesContent":["'use strict';\n\n/**\n * @file 框架配置\n * @author xudeming208@126.com\n */\n\nrequire('colors');\nconst fs = require('fs');\nconst path = require('path');\nconst nodeopen = require('nodeopen');\nconst execFun = require('./execFun');\nconst ip = require('./getIp')();\n\n// config\nconst config = () => {\n\tlet fileName = path.resolve('./mid/nest/config/config.json');\n\tlet content = require(fileName);\n\tlet serverPort = Math.random() * 1000 | 0 + 6000;\n\tlet jserverPort = serverPort + 1;\n\tlet staticHost = `http://${ip}:${jserverPort}`;\n\tcontent.etc.serverPort = serverPort;\n\tcontent.etc.jserverPort = jserverPort;\n\tcontent.site.staticHost = staticHost;\n\n\t/* eslint-disable arrow-parens */\n\tfs.writeFile(fileName, JSON.stringify(content, null, '\\t'), 'utf-8', (err) => {\n\t\t/* eslint-enable arrow-parens */\n\t\tif (err) {\n\t\t\tconsole.dir(err);\n\t\t}\n\t\t// exec framework\n\t\texecFun(['cd mid/nest', 'npm run start'], 'framework start', () => {\n\t\t\t/* eslint-disable quotes */\n\t\t\tconsole.log(`In the browser input`, `127.0.0.1:${serverPort}`.green.underline, `or`,\n\t\t\t\t`${ip}:${serverPort}`.green.underline, `, and then can see the pages.\\n`);\n\t\t\tnodeopen(`http://${ip}:${serverPort}`, () => {\n\t\t\t\tconsole.log(`browser has opened!`);\n\t\t\t});\n\t\t\t/* eslint-enable quotes */\n\t\t});\n\t});\n};\n\nmodule.exports = config;\n"]}